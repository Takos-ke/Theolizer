//############################################################################
/*!
    @brief      ドキュメント・ファイル－使用方法（個別）
    @ingroup    Documents
    @file       7e.support_stl.h
    @author     Yoshinori Tahara
    @date       2017/02/08 Created
*/
/*
    Copyright (c) 2016 Yohinori Tahara(Theoride Technology) - http://theolizer.com/

    商用ライセンス
        有効なTheolizer商用ライセンスを保持している人は、
        田原良則(Theoride Technology)と締結している商用ライセンス契約の
        使用条件に従って、このファイルを取り扱うことができます。

    General Public License Version 3(以下GPLv3)
        Free Software Foundationが公表するGPLv3の使用条件に従って、
        あなたはこのファイルを取り扱うことができます。
        GPLv3の内容を https://www.gnu.org/licenses/gpl.txt にて確認して下さい。
        GPLv3のコピーをLICENSE.TXTファイルにおいてます。
*/
//############################################################################

/*!
    @page SupportSTL スマート・ポインタ、および、標準コンテナ・サポートの使い方
ここでは、スマート・ポイントと標準コンテナをシリアライズするための機能について説明します。

基本は単にシリアライズするだけです。特別な操作は必要ありませんが、コンテナについては２つ応用的な使い方があります。

- コンテナへ保存する要素をオブジェクト追跡する場合
- 保存先指定機能(@ref Destinations )により分割保存したコンテナのデータを合成する場合

<br>
//############################################################################
@section HowToUseSmartPointer 1.スマート・ポインタをシリアライズする
//############################################################################

全てのスマート・ポインタが管理するポインタはオーナー指定ポインタとしてシリアライズします。

- `std::unique_ptr<T>`<br>
`std::unique_ptr<T>`は通常通りシリアライズ可能です。<br>
なお、`std::unique_ptr<T[]>`は非サポートです。T[]をシリアライズするためには、その要素数が必要ですが管理されていないため、対応できません。

- `std::shared_ptr<T>`<br>
同じインスタンスを管理するstd::shared_ptr<T>を保存し回復すると、その状況を回復します。<br>
なお、同じインスタンスを管理するstd::shared_ptr<T>群の一部を保存／回復しなかった場合、



@subsection HowToUseSmartPointer11 1-1.

//############################################################################
@section HowToUseContainer 2.標準コンテナをシリアライズする
//############################################################################

*/
